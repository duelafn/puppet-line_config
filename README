
Puppet file_line Module
=======================

Manipulate individual lines of a file

This module came about when I realized that augeas lenses are tied to
specific config files, hence I could not use it to edit arbitrary ini files
on my system (without creating a custom lens for each one).

This module is trying to be appropriate for line-based config files.
Currently it should be able to handle line-by-line configs, KEY=VALUE, and
INI-style config files. It does not yet support puppet filebuckets or line
ordering (See the TODO file).

I consider this module usable and it works for me on production systems. I
do NOT, however, consider it stable - some changes in behavior may occur
between releases. At the very least, due to a conflict with a "file_line"
type in stdlib, I will probably have to change the name of this type.


Examples (see also examples directory):

# default provider replaces /^\s*KEY\s*=/ with "KEY=VALUE"
# default provider ignores lines matching /^\s*#/
file_line { "/etc/adduser.conf: DHOME":
    path     => "/etc/adduser.conf",
    key      => "DHOME",
    value    => "/nfs/home",
}

# sets general.smoothScroll to false.
# ignores all comment lines
# will replace any existing (uncommented) general.smoothScroll setting
file_line { "/home/duelafn/etc/mozilla/user.js: general.smoothScroll":
    provider => "basic",
    path     => "/home/duelafn/etc/mozilla/user.js",
    content  => 'user_pref("general.smoothScroll", false);',
    ignore   => "^\\s*//",
    replace  => "[\\"']general\\.smoothScroll[\\"']",
}

# Set a default value only if missing
file_line { "/etc/abcde.conf: OUTPUTTYPE":
    path     => "/etc/abcde.conf",
    ensure   => "set",
    key      => "OUTPUTTYPE",
    value    => "ogg",
}


# Use a define (see examples directory) to make config settings quite nice:
kdmrc { "NoPassUsers": ensure => "unset" }
kdmrc { "DefaultUser":
    value => "guest",
    section => "X-:0-Greeter"
}
